{"version":3,"file":"static/js/257.1f22e68f.chunk.js","mappings":"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","sources":["components/TMDBApi.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'a7e744545a90e8a389dfa0119353f0c2';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&include_adult=false&language=en-US&page=1&query=${keyword}`);\n    return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n  return response.data;\n};\n\nexport const fetchActors = async movieId => {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n    const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n    return response.data.results;\n};\n\n\n\n\n\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Button = styled.button`\n    border: 1px solid #e660cb;\n    border-radius: 5px;\n    padding: 5px;\n    font-size: 18px;\n    background-color: #ebb4e0;\n    color: #3e3d3d;\n    margin: 15px;\n\n    &:hover{\n        border: 2px solid #e660cb;\n        background-color: #e660cb;\n    }\n`;\n\nexport const Container = styled.div`\n    display: flex;\n    padding: 20px 0 20px 0;\n    gap: 24px;\n`;\n\nexport const List = styled.ul`\n    display: flex;\n    gap: 12px;\n    padding: 0 0 20px 0;\n`;\n\nexport const AdditionalList = styled.ul`\n    display: flex;\n    gap: 10px;\n`;\n\nexport const AdditionalLink = styled(Link)`\n    border: 1px solid #e660cb;\n    border-radius: 5px;\n    padding: 5px 10px;\n    font-size: 18px;\n    background-color: #ebb4e0;\n    color: #3e3d3d;\n    margin-right: 10px;\n    margin-bottom: 15px;\n\n\n    &:hover{\n        border: 2px solid #e660cb;\n        background-color: #e660cb;\n    }\n`;\n\n","import { useEffect, useRef, useState } from 'react';\nimport { fetchMovieDetails } from 'components/TMDBApi';\nimport Loader from 'components/Loader/Loader';\nimport { Outlet,Link, useParams, useLocation } from 'react-router-dom';\nimport { Button, Container, List, AdditionalList, AdditionalLink} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [infoMovie, setInfoMovie] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const location = useLocation();\n    const backLinkRef = useRef(location);\n\n    useEffect(() => {\n        \n        const fetchFilmInfo = () => {\n            setIsLoading(true);\n             \n            fetchMovieDetails(movieId)\n                .then(details => { setInfoMovie(details); })\n                .catch(error => { console.log(error); })\n                .finally(() => { setIsLoading(false); })\n        };\n\n        fetchFilmInfo();\n    }, [movieId]);\n\n    if (!infoMovie) {\n        return;\n    };\n\n    const { title, release_date,  overview, genres, poster_path, original_title } = infoMovie;\n    \n    const popularity = Math.round(infoMovie.vote_average * 10);\n\n    return (\n        <>\n            <Link to={backLinkRef.state?.from ?? '/'}>\n                <Button>Go back</Button>\n            </Link>\n            {isLoading && <Loader />}\n        \n            {infoMovie && (\n                <Container>\n                    <img src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt={original_title} width=\"250px\" />\n                    <div>\n                        <h1>{title}({release_date.slice(0,4)})</h1>\n                        <p>User score: {popularity}%</p>\n                        <h2>Overview</h2>\n                        <p>{overview}</p>\n                        <h2>Genres</h2>\n                        <List>\n                            {genres.map(genre => (\n                                <li key={genre.id}>{genre.name}</li>\n                            ))}\n                        </List>\n                    </div>\n                </Container>\n            )}\n\n            <hr />\n            <div>\n                <h2>Additional information</h2>\n                <AdditionalList>\n                    <li>\n                        <AdditionalLink to='cast'>Cast</AdditionalLink>\n                    </li>\n                    <li>\n                        <AdditionalLink to='reviews'>Reviews</AdditionalLink>\n                    </li>\n                </AdditionalList>\n                <hr />\n                <Outlet/>\n            </div>\n        </>\n    )\n};\n\nexport default MovieDetails;"],"names":["axios","API_KEY","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","results","stop","apply","arguments","fetchSearchByKeyword","_ref2","_callee2","keyword","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchActors","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4","Button","styled","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","List","_templateObject3","AdditionalList","_templateObject4","AdditionalLink","Link","_templateObject5","_backLinkRef$state$fr","_backLinkRef$state","useParams","_useState","useState","_useState2","_slicedToArray","infoMovie","setInfoMovie","_useState3","_useState4","isLoading","setIsLoading","location","useLocation","backLinkRef","useRef","useEffect","then","details","catch","error","console","log","finally","title","release_date","overview","genres","poster_path","original_title","popularity","Math","round","vote_average","_jsxs","_Fragment","children","_jsx","to","state","from","Loader","src","alt","width","slice","map","genre","name","id","Outlet"],"sourceRoot":""}