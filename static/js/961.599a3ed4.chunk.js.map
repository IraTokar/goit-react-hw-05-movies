{"version":3,"file":"static/js/961.599a3ed4.chunk.js","mappings":"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","sources":["components/TMDBApi.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'a7e744545a90e8a389dfa0119353f0c2';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&include_adult=false&language=en-US&page=1&query=${keyword}`);\n    return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n  return response.data;\n};\n\nexport const fetchActors = async movieId => {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n    const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n    return response.data.results;\n};\n\n\n\n\n\n","import { useEffect, useState } from 'react';\nimport { fetchMovieDetails } from 'components/TMDBApi';\nimport Loader from 'components/Loader/Loader';\nimport { Outlet, Link, useParams, useLocation} from 'react-router-dom';\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [infoMovie, setInfoMovie] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const location = useLocation();\n\n    useEffect(() => {\n        \n        const fetchFilmInfo = () => {\n            setIsLoading(true);\n             \n            fetchMovieDetails(movieId)\n                .then(details => { setInfoMovie(details); })\n                .catch(error => { console.log(error); })\n                .finally(() => { setIsLoading(false); })\n        };\n\n        fetchFilmInfo();\n    }, [movieId]);\n\n    if (!infoMovie) {\n        return;\n    };\n\n    const { title, release_date,  overview, genres, poster_path, original_title } = infoMovie;\n    \n    const popularity = Math.round(infoMovie.vote_average * 10);\n\n    return (\n        <>\n            <Link to={location.state?.from ?? '/'}>\n                <button>Go back</button>\n            </Link>\n            {isLoading && <Loader />}\n        \n            {infoMovie && (\n                <div>\n                    <img src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt={original_title} width=\"250px\"/>\n                    <h1>{title}({release_date.slice(0,4)})</h1>\n                    <p>User score: {popularity}%</p>\n                    <h2>Overview</h2>\n                    <p>{overview}</p>\n                    <h2>Genres</h2>\n                    <ul>\n                        {genres.map(genre => (\n                            <li key={genre.id}>{genre.name}</li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n\n            <hr />\n            <div>\n                <h3>Additional information</h3>\n                <ul>\n                    <li>\n                        <Link to='cast'>Cast</Link>\n                    </li>\n                    <li>\n                        <Link to='reviews'>Reviews</Link>\n                    </li>\n                </ul>\n                <hr />\n                <Outlet/>\n            </div>\n        </>\n    )\n};\n\nexport default MovieDetails;"],"names":["axios","API_KEY","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","results","stop","apply","arguments","fetchSearchByKeyword","_ref2","_callee2","keyword","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchActors","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4","_location$state$from","_location$state","useParams","_useState","useState","_useState2","_slicedToArray","infoMovie","setInfoMovie","_useState3","_useState4","isLoading","setIsLoading","location","useLocation","useEffect","then","details","catch","error","console","log","finally","title","release_date","overview","genres","poster_path","original_title","popularity","Math","round","vote_average","_jsxs","_Fragment","children","_jsx","Link","to","state","from","Loader","src","alt","width","slice","map","genre","name","id","Outlet"],"sourceRoot":""}