{"version":3,"file":"static/js/414.5642487c.chunk.js","mappings":"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","sources":["components/TMDBApi.jsx","components/TrendingLIst/TrendingList.jsx","components/Form/Form.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'a7e744545a90e8a389dfa0119353f0c2';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&include_adult=false&language=en-US&page=1&query=${keyword}`);\n    return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n  return response.data;\n};\n\nexport const fetchActors = async movieId => {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n    const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n    return response.data.results;\n};\n\n\n\n\n\n","\nimport { Link, useLocation } from 'react-router-dom';\n\n\nconst TrendingList = ({ films }) => {\n  const location = useLocation();\n   \n  return (\n    <ul>\n      {films.map(film => (\n        <li key={film.id}>\n          <Link to= {`/movies/${film.id}`} state={{ from: location }}>\n            {film.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\n\n\nexport default TrendingList;\n\n\n\n\n\n\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Form = ({ searchMovies }) => {\n    const [query, setQuery] = useState('');\n\n    const handleSubmit = evt => {\n        evt.preventDefault();\n        searchMovies(query);\n    };\n\n    const handleChange = evt => {\n        setQuery(evt.target.value);\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                name='query'\n                placeholder='Search movie'\n                value={query}\n                onChange={handleChange}\n            />\n            <button type='submit'>Search</button>\n        </form>\n    );\n};\n\nForm.propTypes = {\n  searchMovies: PropTypes.func.isRequired,\n};\n\nexport default Form;\n\n\n\n\n","import { useEffect, useState } from 'react';\nimport { fetchSearchByKeyword } from 'components/TMDBApi';\nimport Form from 'components/Form/Form';\nimport TrendingList from 'components/TrendingLIst/TrendingList';\nimport Loader from 'components/Loader/Loader';\nimport { useSearchParams } from 'react-router-dom';\n\n\nconst Movies = () => {\n    const [searchFilm, setSearchFilm] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const [params, setParams] = useSearchParams();\n    const movieName = params.get('query') ?? '';\n\n    const updateQueryString = query => {\n    const nextParams = query !== '' && { query };\n    setParams(nextParams);\n  };\n\n\n    useEffect(() => {\n        if (movieName === '') {\n            return;\n        };\n\n            const searchMovies = ()=> {\n        setIsLoading(true);\n\n        fetchSearchByKeyword(movieName)\n            .then(movies => { setSearchFilm(movies); })\n            .catch(error => { console.log(error); })\n            .finally(() => { setIsLoading(false); })\n    };\n        \n        searchMovies();\n      \n    },[movieName])\n  \n\n    return (\n        <main>\n            \n            <Form searchMovies={updateQueryString} />\n            {isLoading && <Loader />}\n            {searchFilm && <TrendingList films={searchFilm} />}\n            \n            \n        </main>\n    );\n};\n\nexport default Movies;\n\n\n//   useEffect(() => {\n//     const search = async () => {\n//       try {\n//         setIsLoading(true);\n//         const movies = await fetchSearchByKeyword(movieName);\n//         setSearchFilms(movies);\n//       } catch (error) {\n//         console.error(error);\n//       } finally {\n//         setIsLoading(false);\n//       }\n//     };\n//     search();\n//   }, [movieName]);\n\n\n"],"names":["axios","API_KEY","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","results","stop","apply","arguments","fetchSearchByKeyword","_ref2","_callee2","keyword","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchActors","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4","films","location","useLocation","_jsx","children","map","film","Link","to","id","state","from","title","searchMovies","_useState","useState","_useState2","_slicedToArray","query","setQuery","_jsxs","onSubmit","evt","preventDefault","type","name","placeholder","value","onChange","target","_params$get","searchFilm","setSearchFilm","_useState3","_useState4","isLoading","setIsLoading","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","movieName","get","useEffect","then","movies","catch","error","console","log","finally","Form","Loader","TrendingList"],"sourceRoot":""}